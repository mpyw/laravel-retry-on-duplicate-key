<?php

namespace Illuminate\Database
{
    if (!getenv('ENABLE_POLYFILL')) {
        return;
    }

    $file = file_get_contents(__DIR__ . '/../vendor/laravel/framework/src/Illuminate/Database/Connection.php');
    eval('?>' . str_replace('class Connection', 'class __OriginalConnection__', $file));

    class Connection extends __OriginalConnection__
    {
        protected $beforeExecutingCallbacks = [];

        public function beforeExecuting(\Closure $callback)
        {
            $this->beforeExecutingCallbacks[] = $callback;

            return $this;
        }

        public function hasModifiedRecords()
        {
            return $this->recordsModified;
        }

        public function forgetRecordModificationState()
        {
            $this->recordsModified = false;
        }

        public function setRecordModificationState(bool $value)
        {
            $this->recordsModified = $value;

            return $this;
        }

        protected function run($query, $bindings, \Closure $callback)
        {
            foreach ($this->beforeExecutingCallbacks as $beforeExecutingCallback) {
                $beforeExecutingCallback($query, $bindings, $this);
            }

            $this->reconnectIfMissingConnection();

            $start = microtime(true);

            try {
                $result = $this->runQueryCallback($query, $bindings, $callback);
            } catch (QueryException $e) {
                $result = $this->handleQueryException(
                    $e, $query, $bindings, $callback
                );
            }

            $this->logQuery(
                $query, $bindings, $this->getElapsedTime($start)
            );

            return $result;
        }
    }
}
